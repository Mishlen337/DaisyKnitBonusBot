from aiogram import types
from aiogram.dispatcher.storage import FSMContext
from loguru import logger
from core.database.repositories.user import UserRepository
from core.database.create_table import SessionLocal


async def start_handler(message: types.Message, state: FSMContext):
    logger.debug(f"In start handler - guest {message.from_user}")
    session = SessionLocal()
    ur = UserRepository(session)
    logger.debug(f"Adding guest {message.from_user.id} in db")
    try:
        await ur.add({"tg_chat_id": message.from_user.id})
        logger.debug(f"Guest {message.from_user.id} successfully added in db")
    except ValueError:
        logger.debug(f"Guest is already exist")
    await session.close()
    await message.answer(
        """–î–æ–±—Ä—ã–π –¥–µ–Ω—å!üå∫
–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–π –º–∞—Ä–∫–∏, –Ω–æ—Å–∏—Ç–µ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ–º! 
‚ù§Ô∏è
–†–∞–¥—ã –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–ª—è –í–∞—Å –±–æ–Ω—É—Å üéÅ
(200 —Ä—É–±–ª–µ–π –Ω–∞ —Å—á–µ—Ç/—Ç–µ–ª–µ—Ñ–æ–Ω), –µ—Å–ª–∏ 
–æ—Å—Ç–∞–≤–∏—Ç–µ –æ—Ç–∑—ã–≤ —Å —Ñ–æ—Ç–æ –æ –Ω–∞—à–µ–º –∏–∑–¥–µ–ª–∏–∏.
üíå–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤:"""
    )
    await message.answer("–í–∞—à —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å:")
    await state.set_state("email")
